


Users can view a list of all articles and submit their own



Articles and comments are sorted by upvote/downvote score


Models have appropriate validations and errors are shown to the user
App has at least basic styles to provide an attractive and intuitive experience
App generates HTML and CSS that validates with no errors
Code is well-refactored and avoids duplication or repetition
Code follows style conventions and has descriptive variable and method names
App has at least some feature tests and unit tests using RSpec
Repository has clean, logical, single-task commits with descriptive messages
App is deployed and fully functional on Heroku

App has a database schema with appropriate columns and indexes
  Users
    schema generated by devise

    has_many :articles, dependent: destroy
    has_many :comments, dependent: destroy
    has_many :votes, dependent: destroy

  Articles
    Title
    URL
    timestamp

    belongs_to :users
    has_many :comments, as: votable
    belongs_to :votable, polymorphic: true

  Comments
    body
    timestamp

    belongs_to :users, :articles
    belongs_to :votable, polymorphic: true

  Votes
    belongs_to :user
    belongs_to :votable, polymorphic: true

    validates! :user_id, uniqueness: { scope: [:votable_id, :votable_type]}

  Routes

  resources :articles do
    resources :comments only:
    resources :votes only: [:create, :destroy]
  end

  resources :comments do
    resources :votes only [:create, :destroy]
  end

rails generate devise User

rails g migration CreateArticles title:text url:text timestamp

rails g migration CreateComments body:text timestamp

rails g migration CreateVotes

App has working seed data to assist in manual testing


Users can register for an account, sign in, and sign out
Users can view comments on articles and submit their own
Users can upvote/downvote articles and comments, and change their vote

